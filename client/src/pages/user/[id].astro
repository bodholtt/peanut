---
import {type User} from "../../global/types";
import InfoLayout from "../../layouts/InfoLayout.astro";
import InsetBlock from "../../components/InsetBlock.astro";

const { id } = Astro.params;

const response = await fetch(`${import.meta.env.API_URL}/user/${id}`);
const data = await response.json();
console.log(data)
if (data.error) {
    return new Response(data.error, {
        status: response.status
    });
}
const user: User = data.body;


const creationDate = new Date(user.created_at);

const ranks = ["User", "Moderator", "Administrator"]
---

<InfoLayout title={user.username}>
    <div class="flex items-baseline justify-start gap-2">
        <h1 class="text-6xl">&#128100;{user.username}</h1>
        <p class="text-gray-500">#{user.id}</p>
    </div>

    <InsetBlock>
        <div class="userinfo">
            <p>user id</p>
            <p>{user.id}</p>
            <p>join date</p>
            <p>{creationDate.toDateString()}</p>
            <p>rank</p>
            <p>{ranks[user.rank-1]}</p>
        </div>
    </InsetBlock>

    <hr class="m-4 border-twcolor-950"/>

    <section class="flex flex-col gap-2">
        <h2 class="text-2xl px-4">uploaded posts:</h2>
        <div class="flex items-start border border-twcolor-950 h-40 p-2 gap-2 overflow-x-auto">

            { [1,2,3,4,5,6,7,8,9,0].map(n =>
                    <div class="h-full min-w-48 border"></div>
            )}

        </div>
        <div class="w-full flex justify-end px-4"><a href="/posts/">see all</a></div>
    </section>

    <section class="flex flex-col gap-2">
        <h2 class="text-2xl px-4">favorited posts:</h2>
        <div class="flex items-start border border-twcolor-950 h-40 p-2 gap-2 overflow-x-auto">

            { [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7].map(n =>
                    <div class="h-full min-w-48 border"></div>
            )}

        </div>
        <div class="w-full flex justify-end px-4"><a href="/posts/">see all</a></div>
    </section>

</InfoLayout>

<style>
    .userinfo {
        display: grid;
        grid-template-columns: auto 1fr;
    }
    .userinfo p:nth-child(odd) {
        @apply text-right font-bold px-2;
    }
</style>