---
import PostCard from "../../components/PostCard.astro";
import PostsLayout from "../../layouts/PostsLayout.astro";
import type {PostThumbs} from "../../global/types";

// GET LIMIT AND OFFSET QUERIES
const limit = Astro.url.searchParams.get('limit');
const offset = Astro.url.searchParams.get('offset');
let queries = [];
if (limit) queries.push(`limit=${limit}`);
if (offset) queries.push(`offset=${offset}`);
let url = `${import.meta.env.API_URL}/posts`;
if (queries) url += `?${queries.join('&')}`;

// GET POST THUMBNAILS FROM API
const response = await fetch(url);
const postDetails: PostThumbs = await response.json();
const posts = postDetails.Thumbs;

if (posts) {
    posts.sort((a,b) => (Number(a.id) < Number(b.id)? 1 : -1));
}

// CALCULATE PAGE NUMBER
let pageNum = 1;
if (limit && offset > 0) {
    pageNum = Math.floor( offset / limit) + 1;
}
if (!limit && offset) {
    // No set limit -> assume 50
    pageNum = Math.floor( offset / 50) + 1;
}

// CALCULATE LINKS FOR PAGINATION
const pcresponse = await fetch(`${import.meta.env.API_URL}/postCount`);
const postCount = await pcresponse.json();
const limitNum = limit? Number(limit) : 50;

let params = Astro.url.searchParams;
params.set("offset", "0");
const firstpagelink = `/posts?${params}`;

params = Astro.url.searchParams;
let newOffset = Number(offset) - limitNum;
if (newOffset < 0) newOffset = 0;
params.set("offset", newOffset.toString());
const prevpagelink = `/posts?${params}`;

params = Astro.url.searchParams;
newOffset = Number(offset) + limitNum;
if (newOffset >= postCount) newOffset = Number(offset);
params.set("offset", newOffset.toString());
const nextpagelink = `/posts?${params}`;

params = Astro.url.searchParams;
newOffset = postCount - ((postCount - limitNum) % limitNum);
if (newOffset > postCount) newOffset = 0;
params.set("offset", newOffset.toString());
const lastpagelink = `/posts?${params}`;

---
<PostsLayout title="posts">
    <section class="grid cols-auto-1fr overflow-hidden">

    <section class="w-56 border-r-gray-600 p-4" slot="sidebar">
        <label>
            <input type="text" class="w-full" placeholder="enter tags..."/>
        </label>
        <hr class="my-2"/>
        <p>tag</p>
        <p>tag</p>
        <p>tag</p>
        <p>tag</p>
    </section>

    <section class="flex flex-col h-full justify-between">
        <div class="flex gap-2 p-4 flex-row flex-wrap overflow-y-auto content-start">
        {posts ? posts.map(post => (
                <PostCard postThumb={post} />
        )) :
        <p>No posts found</p>}
        </div>
        <div class="flex flex-row gap-4 justify-center items-center py-12">
            <a href={firstpagelink} class="paginationlink">&#x21e4;</a>
            <a href={prevpagelink} class="paginationlink">&#x2190;</a>
            <label>
                <input type="number"
                       id="pagenumber"
                       class="text-twcolor-950 h-4 w-16 resize-none text-center bg-transparent font-bold"
                       value={pageNum}
                ></input>
            </label>
            <a href={nextpagelink} class="paginationlink">&#x2192;</a>
            <a href={lastpagelink} class="paginationlink">&#x21e5;</a>
        </div>
    </section>

    </section>
</PostsLayout>

<style>
    .paginationlink {
        @apply text-twcolor-800 cursor-pointer;
    }
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
     -webkit-appearance: none;
     margin: 0;
    }
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<script>
    const pageNumEle = document.getElementById("pagenumber");

    pageNumEle.addEventListener("change", () => {

        let url = new URL(window.location.href);
        let value = Number(pageNumEle.value);
        if (!value || value < 0) return;

        let limit = url.searchParams.get("limit");
        if (!limit) limit = "50";

        let newOffset = (value - 1) * Number(limit);
        url.searchParams.set("offset", newOffset.toString());
        window.location.href = url.href;

    });
</script>